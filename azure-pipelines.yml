variables:
  - name: _BuildConfig
    value: Release
  - name: _TeamName
    value: AspNetCore
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: _PublishUsingPipelines
    value: true
  - name: _DotNetArtifactsCategory
    value: ENTITYFRAMEWORKCORE
  - name: _CosmosConnectionUrl
    value: https://localhost:8081
  - name: _CosmosToken
    value: C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==
  - ${{ if ne(variables['System.TeamProject'], 'public') }}:
    - group: DotNet-MSRC-Storage
    - name: _InternalRuntimeDownloadArgs
      value: /p:DotNetRuntimeSourceFeed=https://dotnetclimsrc.blob.core.windows.net/dotnet
             /p:DotNetRuntimeSourceFeedKey=$(dotnetclimsrc-read-sas-token-base64)
  - ${{ if eq(variables['System.TeamProject'], 'public') }}:
    - name: _InternalRuntimeDownloadArgs
      value: ''
    
  # used for post-build phases, internal builds only
  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    - group: DotNet-EFCore-SDLValidation-Params

trigger:
  - master
  - release/*
  - feature/*
  - internal/release/3.*

pr: ['*']

stages:
 - stage: build
   displayName: Build
   jobs:
    - template: /eng/common/templates/job/job.yml
      parameters:
        name: Windows_NT
        enableTelemetry: true
        enablePublishBuildArtifacts: true
        helixRepo: dotnet/efcore
        pool:
          ${{ if eq(variables['System.TeamProject'], 'public') }}:
            name: NetCorePublic-Pool
            queue: BuildPool.Windows.10.Amd64.VS2017.Open
          ${{ if ne(variables['System.TeamProject'], 'public') }}:
            name: NetCoreInternal-Pool
            queue: BuildPool.Windows.10.Amd64.VS2017
        steps:
        - script: restore.cmd -ci
          displayName: Build
        - script: .dotnet\dotnet msbuild eng\helix.proj
          displayName: Send job to helix
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken) # We need to set this env var to publish helix results to Azure Dev Ops
        